-- üåü –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –°–ö–†–ò–ü–¢ –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–Ø –î–õ–Ø ROBLOX üåü
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- ========== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ==========
local MAX_DISTANCE = 1000
local TOUCH_DISTANCE = 50
local INTERACTION_KEY = Enum.KeyCode.E
local isGuiVisible = true
local isTouchingActive = false
local gui = nil
local touchConnection = nil
local sphere = nil

-- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
local originalFireProximityPrompt
local originalFireClickDetector
local originalProximityPromptRange = 10

-- ========== –°–ò–°–¢–ï–ú–ê GUI ==========
function createGUI()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "UniversalInteractionGUI"
    screenGui.Parent = game.CoreGui
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true

    -- –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 400, 0, 450)
    mainFrame.Position = UDim2.new(0.5, -200, 0.1, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0)
    mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame

    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 40)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Text = "üöÄ –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û–ï –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ï"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16
    title.Parent = mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = title

    -- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    local closeButton = createButton("√ó", Color3.fromRGB(200, 50, 50), UDim2.new(1, -35, 0, 5), title)
    local hideButton = createButton("‚îÄ", Color3.fromRGB(100, 100, 150), UDim2.new(1, -70, 0, 5), title)

    -- –ö–æ–Ω—Ç–µ–Ω—Ç
    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, -20, 1, -60)
    contentFrame.Position = UDim2.new(0, 10, 0, 50)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame

    -- –°–µ–∫—Ü–∏—è –¥–∞–ª—å–Ω–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    createSection("–î–∞–ª—å–Ω–µ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ", 0, contentFrame)
    
    local distanceInput = createInput("–†–∞–¥–∏—É—Å –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è (studs):", tostring(MAX_DISTANCE), 25, contentFrame)
    local applyDistanceBtn = createActionButton("–ü–†–ò–ú–ï–ù–ò–¢–¨ –†–ê–î–ò–£–°", 65, contentFrame)
    
    -- –°–µ–∫—Ü–∏—è –∫–∞—Å–∞–Ω–∏—è
    createSection("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∫–∞—Å–∞–Ω–∏–µ", 110, contentFrame)
    
    local touchInput = createInput("–†–∞–¥–∏—É—Å –∫–∞—Å–∞–Ω–∏—è (studs):", tostring(TOUCH_DISTANCE), 135, contentFrame)
    local applyTouchBtn = createActionButton("–ü–†–ò–ú–ï–ù–ò–¢–¨ –†–ê–î–ò–£–°", 175, contentFrame)
    local touchToggleBtn = createToggleButton("üö´ –í–´–ö–õ - –ö–ê–°–ê–¢–¨–°–Ø –í–°–ï–ì–û (T)", 215, contentFrame)

    -- –°—Ç–∞—Ç—É—Å –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    local statusLabel = createLabel("–°—Ç–∞—Ç—É—Å: –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞", 255, contentFrame)
    local infoLabel = createLabel("üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ E –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è, T –¥–ª—è –∫–∞—Å–∞–Ω–∏—è", 280, contentFrame)
    local debugLabel = createLabel("–û–±—ä–µ–∫—Ç–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ: 0", 305, contentFrame)

    -- –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞ GUI
    local showButton = Instance.new("TextButton")
    showButton.Size = UDim2.new(0, 140, 0, 40)
    showButton.Position = UDim2.new(0.5, -70, 0, 10)
    showButton.BackgroundColor3 = Color3.fromRGB(60, 120, 200)
    showButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    showButton.Text = "üìã –ü–û–ö–ê–ó–ê–¢–¨ –ü–ê–ù–ï–õ–¨"
    showButton.Font = Enum.Font.GothamBold
    showButton.TextSize = 14
    showButton.Visible = false
    showButton.Parent = screenGui
    
    local showCorner = Instance.new("UICorner")
    showCorner.CornerRadius = UDim.new(0, 8)
    showCorner.Parent = showButton

    return {
        ScreenGui = screenGui,
        MainFrame = mainFrame,
        CloseButton = closeButton,
        HideButton = hideButton,
        ShowButton = showButton,
        DistanceInput = distanceInput,
        TouchInput = touchInput,
        ApplyDistanceBtn = applyDistanceBtn,
        ApplyTouchBtn = applyTouchBtn,
        TouchToggleBtn = touchToggleBtn,
        StatusLabel = statusLabel,
        InfoLabel = infoLabel,
        DebugLabel = debugLabel
    }
end

-- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ GUI
function createButton(text, color, position, parent)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(0, 30, 0, 30)
    btn.Position = position
    btn.BackgroundColor3 = color
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 20
    btn.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 15)
    corner.Parent = btn
    
    return btn
end

function createSection(title, yPos, parent)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, yPos)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(100, 200, 255)
    label.Text = "=== " .. title .. " ==="
    label.Font = Enum.Font.GothamBold
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Center
    label.Parent = parent
end

function createInput(labelText, defaultText, yPos, parent)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, yPos)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(200, 200, 200)
    label.Text = labelText
    label.Font = Enum.Font.Gotham
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = parent

    local input = Instance.new("TextBox")
    input.Size = UDim2.new(1, 0, 0, 30)
    input.Position = UDim2.new(0, 0, 0, yPos + 25)
    input.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
    input.TextColor3 = Color3.fromRGB(255, 255, 255)
    input.Text = defaultText
    input.Font = Enum.Font.Gotham
    input.TextSize = 14
    input.PlaceholderText = "–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ..."
    input.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = input
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 10)
    padding.PaddingRight = UDim.new(0, 10)
    padding.Parent = input
    
    return input
end

function createActionButton(text, yPos, parent)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 35)
    btn.Position = UDim2.new(0, 0, 0, yPos)
    btn.BackgroundColor3 = Color3.fromRGB(60, 120, 200)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    btn.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = btn
    
    return btn
end

function createToggleButton(text, yPos, parent)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 40)
    btn.Position = UDim2.new(0, 0, 0, yPos)
    btn.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
    btn.TextColor3 = Color3.fromRGB(255, 255, 255)
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    btn.Parent = parent
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = btn
    
    return btn
end

function createLabel(text, yPos, parent)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, yPos)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(200, 200, 200)
    label.Text = text
    label.Font = Enum.Font.Gotham
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = parent
    
    return label
end

-- ========== –£–ü–†–ê–í–õ–ï–ù–ò–ï GUI ==========
function hideGUI()
    if gui then
        gui.MainFrame.Visible = false
        gui.ShowButton.Visible = true
        isGuiVisible = false
    end
end

function showGUI()
    if gui then
        gui.MainFrame.Visible = true
        gui.ShowButton.Visible = false
        isGuiVisible = true
    end
end

function closeGUI()
    if gui then
        stopTouching()
        restoreOriginalFunctions()
        if sphere then sphere:Destroy() end
        gui.ScreenGui:Destroy()
        gui = nil
    end
end

-- ========== –°–ò–°–¢–ï–ú–ê –î–ê–õ–¨–ù–ï–ì–û –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–Ø ==========
function findTargetUnderCursor()
    local camera = workspace.CurrentCamera
    local rayDirection = (mouse.Hit.Position - camera.CFrame.Position).Unit * MAX_DISTANCE
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {player.Character}
    
    local raycastResult = workspace:Raycast(camera.CFrame.Position, rayDirection, raycastParams)
    
    if raycastResult then
        return raycastResult.Instance
    end
    return nil
end

function interactWithObject(target)
    if target then
        local clickDetector = target:FindFirstChildOfClass("ClickDetector")
        local proximityPrompt = target:FindFirstChildOfClass("ProximityPrompt")
        
        if clickDetector then
            fireclickdetector(clickDetector)
            return true, "ClickDetector"
        end
        
        if proximityPrompt then
            proximityPrompt:InputHoldBegin()
            task.wait(0.1)
            proximityPrompt:InputHoldEnd()
            return true, "ProximityPrompt"
        end
        
        local success, interactionType = pcall(function()
            if target:FindFirstChild("Activate") then
                target.Activate:Fire()
                return "Activate"
            elseif target:FindFirstChild("Interact") then
                target.Interact:Fire()
                return "Interact"
            end
            return "Custom"
        end)
        
        return success, interactionType or "Custom"
    end
    return false, "No target"
end

-- ========== –°–ò–°–¢–ï–ú–ê –ú–û–î–ò–§–ò–ö–ê–¶–ò–ò –î–ê–õ–¨–ù–û–°–¢–ò ==========
function isWithinDistance(position)
    local character = player.Character
    if not character then return false end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return false end
    
    local distance = (position - humanoidRootPart.Position).Magnitude
    return distance <= MAX_DISTANCE
end

function modifyProximityPromptSystem()
    originalFireProximityPrompt = fireproximityprompt
    
    fireproximityprompt = function(prompt, ...)
        if prompt and prompt:IsA("ProximityPrompt") then
            local promptPosition = prompt.Parent:IsA("BasePart") and prompt.Parent.Position or prompt.Parent:GetPivot().Position
            
            if isWithinDistance(promptPosition) then
                return originalFireProximityPrompt(prompt, ...)
            end
            return nil
        end
        return originalFireProximityPrompt(prompt, ...)
    end
    
    for _, prompt in ipairs(workspace:GetDescendants()) do
        if prompt:IsA("ProximityPrompt") then
            originalProximityPromptRange = prompt.MaxActivationDistance
            prompt.MaxActivationDistance = 10000
        end
    end
end

function modifyClickDetectorSystem()
    originalFireClickDetector = fireclickdetector
    
    fireclickdetector = function(detector, ...)
        if detector and detector:IsA("ClickDetector") then
            local detectorPosition = detector.Parent:IsA("BasePart") and detector.Parent.Position or detector.Parent:GetPivot().Position
            
            if isWithinDistance(detectorPosition) then
                return originalFireClickDetector(detector, ...)
            end
            return nil
        end
        return originalFireClickDetector(detector, ...)
    end
end

function restoreOriginalFunctions()
    if originalFireProximityPrompt then
        fireproximityprompt = originalFireProximityPrompt
    end
    
    if originalFireClickDetector then
        fireclickdetector = originalFireClickDetector
    end
    
    for _, prompt in ipairs(workspace:GetDescendants()) do
        if prompt:IsA("ProximityPrompt") then
            prompt.MaxActivationDistance = originalProximityPromptRange
        end
    end
end

-- ========== –°–ò–°–¢–ï–ú–ê –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ì–û –ö–ê–°–ê–ù–ò–Ø ==========
function getPlayerPosition()
    local character = player.Character
    if not character then return nil end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return nil end
    
    return humanoidRootPart.Position
end

function findHitboxesInRadius()
    local playerPos = getPlayerPosition()
    if not playerPos then return {} end
    
    local hitboxes = {}
    
    for _, part in ipairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            local partPos = part.Position
            local distance = (partPos - playerPos).Magnitude
            
            if distance <= TOUCH_DISTANCE then
                table.insert(hitboxes, part)
            end
        end
    end
    
    return hitboxes
end

function simulateTouch(hitbox)
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    hitbox.Touched:Fire(humanoidRootPart)
    
    local touchTransmitter = hitbox:FindFirstChildOfClass("TouchTransmitter")
    if touchTransmitter then
        touchTransmitter:Fire(humanoidRootPart)
    end
    
    local clickDetector = hitbox:FindFirstChildOfClass("ClickDetector")
    if clickDetector then
        fireclickdetector(clickDetector, 0)
    end
end

function startTouching()
    if isTouchingActive then return end
    
    isTouchingActive = true
    gui.TouchToggleBtn.BackgroundColor3 = Color3.fromRGB(60, 200, 60)
    gui.TouchToggleBtn.Text = "‚úÖ –í–ö–õ - –ö–ê–°–ê–¢–¨–°–Ø –í–°–ï–ì–û (T)"
    updateStatus("–ö–∞—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: " .. TOUCH_DISTANCE .. " studs", Color3.fromRGB(100, 255, 100))
    
    touchConnection = RunService.Heartbeat:Connect(function()
        local hitboxes = findHitboxesInRadius()
        
        for _, hitbox in ipairs(hitboxes) do
            simulateTouch(hitbox)
        end
        
        if gui then
            gui.DebugLabel.Text = "–û–±—ä–µ–∫—Ç–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ: " .. #hitboxes
        end
    end)
end

function stopTouching()
    if not isTouchingActive then return end
    
    isTouchingActive = false
    if touchConnection then
        touchConnection:Disconnect()
        touchConnection = nil
    end
    
    if gui then
        gui.TouchToggleBtn.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
        gui.TouchToggleBtn.Text = "üö´ –í–´–ö–õ - –ö–ê–°–ê–¢–¨–°–Ø –í–°–ï–ì–û (T)"
        updateStatus("–°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞", Color3.fromRGB(200, 200, 200))
        gui.DebugLabel.Text = "–û–±—ä–µ–∫—Ç–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ: 0"
    end
end

function toggleTouching()
    if isTouchingActive then
        stopTouching()
    else
        startTouching()
    end
end

-- ========== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ==========
function updateStatus(text, color)
    if gui then
        gui.StatusLabel.Text = "–°—Ç–∞—Ç—É—Å: " .. text
        gui.StatusLabel.TextColor3 = color
    end
end

function createVisualizationSphere()
    if sphere then sphere:Destroy() end
    
    sphere = Instance.new("Part")
    sphere.Shape = Enum.PartType.Ball
    sphere.Size = Vector3.new(TOUCH_DISTANCE * 2, TOUCH_DISTANCE * 2, TOUCH_DISTANCE * 2)
    sphere.Transparency = 0.9
    sphere.Color = Color3.fromRGB(255, 100, 100)
    sphere.Anchored = true
    sphere.CanCollide = false
    sphere.Material = Enum.Material.Neon
    sphere.Parent = workspace
    sphere.Name = "TouchRadiusVisualization"
end

-- ========== –û–°–ù–û–í–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ==========
function initializeSystem()
    -- –°–æ–∑–¥–∞–µ–º GUI
    gui = createGUI()
    
    -- –°–æ–∑–¥–∞–µ–º –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é
    createVisualizationSphere()
    
    -- –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—ã
    modifyProximityPromptSystem()
    modifyClickDetectorSystem()

    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ GUI
    gui.CloseButton.MouseButton1Click:Connect(closeGUI)
    gui.HideButton.MouseButton1Click:Connect(hideGUI)
    gui.ShowButton.MouseButton1Click:Connect(showGUI)

    gui.ApplyDistanceBtn.MouseButton1Click:Connect(function()
        local newRadius = tonumber(gui.DistanceInput.Text)
        if newRadius and newRadius > 0 then
            MAX_DISTANCE = math.min(newRadius, 10000)
            gui.DistanceInput.Text = tostring(MAX_DISTANCE)
            updateStatus("–î–∞–ª—å–Ω–æ—Å—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: " .. MAX_DISTANCE .. " studs", Color3.fromRGB(100, 255, 100))
        end
    end)

    gui.ApplyTouchBtn.MouseButton1Click:Connect(function()
        local newRadius = tonumber(gui.TouchInput.Text)
        if newRadius and newRadius > 0 then
            TOUCH_DISTANCE = math.min(newRadius, 100)
            gui.TouchInput.Text = tostring(TOUCH_DISTANCE)
            createVisualizationSphere()
            if isTouchingActive then
                updateStatus("–ö–∞—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: " .. TOUCH_DISTANCE .. " studs", Color3.fromRGB(100, 255, 100))
            end
        end
    end)

    gui.TouchToggleBtn.MouseButton1Click:Connect(toggleTouching)

    -- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞
    gui.DistanceInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local newRadius = tonumber(gui.DistanceInput.Text)
            if newRadius and newRadius > 0 then
                MAX_DISTANCE = math.min(newRadius, 10000)
                gui.DistanceInput.Text = tostring(MAX_DISTANCE)
            end
        end
    end)

    gui.TouchInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local newRadius = tonumber(gui.TouchInput.Text)
            if newRadius and newRadius > 0 then
                TOUCH_DISTANCE = math.min(newRadius, 100)
                gui.TouchInput.Text = tostring(TOUCH_DISTANCE)
                createVisualizationSphere()
            end
        end
    end)

    -- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        
        if input.KeyCode == INTERACTION_KEY then
            local target = findTargetUnderCursor()
            if target then
                interactWithObject(target)
            end
        end
        
        if input.KeyCode == Enum.KeyCode.T then toggleTouching() end
        if input.KeyCode == Enum.KeyCode.F1 then showGUI() end
        if input.KeyCode == Enum.KeyCode.F2 then hideGUI() end
        if input.KeyCode == Enum.KeyCode.R then gui.DistanceInput:CaptureFocus() end
        if input.KeyCode == Enum.KeyCode.F5 then closeGUI() end
    end)

    -- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ —Å—Ñ–µ—Ä—ã
    RunService.Heartbeat:Connect(function()
        if sphere then
            local playerPos = getPlayerPosition()
            if playerPos then
                sphere.Position = playerPos
            end
        end
    end)

    -- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    workspace.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("ProximityPrompt") then
            descendant.MaxActivationDistance = 10000
        end
    end)

    print("‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –∑–∞–ø—É—â–µ–Ω–∞!")
    print("üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:")
    print("E - –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –æ–±—ä–µ–∫—Ç–æ–º")
    print("T - –í–∫–ª/–í—ã–∫–ª –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∫–∞—Å–∞–Ω–∏–µ")
    print("F1 - –ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–Ω–µ–ª—å")
    print("F2 - –°–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å")
    print("F5 - –ó–∞–∫—Ä—ã—Ç—å —Å–∏—Å—Ç–µ–º—É")
    print("R - –§–æ–∫—É—Å –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
end

-- ========== –ê–í–¢–û–ó–ê–ü–£–°–ö ==========
task.wait(2)
initializeSystem()

-- –ê–≤—Ç–æ–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
coroutine.wrap(function()
    while true do
        task.wait(5)
        if not gui or not gui.ScreenGui or not gui.ScreenGui.Parent then
            warn("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...")
            initializeSystem()
        end
    end
end)()
