-- –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–∞—Å–∞–Ω–∏—è —Ö–∏—Ç–±–æ–∫—Å–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local MAX_DISTANCE = 50
local isGuiVisible = true
local gui = nil
local isTouchingActive = false
local touchConnection = nil

-- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è GUI
function createGUI()
    -- –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ForceTouchGUI"
    screenGui.Parent = game.CoreGui
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true

    -- –ì–ª–∞–≤–Ω—ã–π —Ñ—Ä–µ–π–º
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 350, 0, 300)
    mainFrame.Position = UDim2.new(0.5, -175, 0.1, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0)
    mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame

    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, 0, 0, 40)
    title.Position = UDim2.new(0, 0, 0, 0)
    title.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.Text = "üîÑ –°–ò–õ–ê –ö–ê–°–ê–ù–ò–Ø"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 16
    title.Parent = mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = title

    -- –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Text = "√ó"
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 20
    closeButton.Parent = title
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 15)
    closeCorner.Parent = closeButton

    -- –ö–Ω–æ–ø–∫–∞ —Å–∫—Ä—ã—Ç–∏—è
    local hideButton = Instance.new("TextButton")
    hideButton.Size = UDim2.new(0, 30, 0, 30)
    hideButton.Position = UDim2.new(1, -70, 0, 5)
    hideButton.BackgroundColor3 = Color3.fromRGB(100, 100, 150)
    hideButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    hideButton.Text = "‚îÄ"
    hideButton.Font = Enum.Font.GothamBold
    hideButton.TextSize = 20
    hideButton.Parent = title
    
    local hideCorner = Instance.new("UICorner")
    hideCorner.CornerRadius = UDim.new(0, 15)
    hideCorner.Parent = hideButton

    -- –ö–æ–Ω—Ç–µ–Ω—Ç
    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, -20, 1, -60)
    contentFrame.Position = UDim2.new(0, 10, 0, 50)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame

    -- –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Ä–∞–¥–∏—É—Å–∞
    local radiusLabel = Instance.new("TextLabel")
    radiusLabel.Size = UDim2.new(1, 0, 0, 20)
    radiusLabel.Position = UDim2.new(0, 0, 0, 0)
    radiusLabel.BackgroundTransparency = 1
    radiusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    radiusLabel.Text = "–†–∞–¥–∏—É—Å –∫–∞—Å–∞–Ω–∏—è (studs):"
    radiusLabel.Font = Enum.Font.Gotham
    radiusLabel.TextSize = 12
    radiusLabel.TextXAlignment = Enum.TextXAlignment.Left
    radiusLabel.Parent = contentFrame

    local radiusInput = Instance.new("TextBox")
    radiusInput.Size = UDim2.new(1, 0, 0, 30)
    radiusInput.Position = UDim2.new(0, 0, 0, 25)
    radiusInput.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
    radiusInput.TextColor3 = Color3.fromRGB(255, 255, 255)
    radiusInput.Text = tostring(MAX_DISTANCE)
    radiusInput.Font = Enum.Font.Gotham
    radiusInput.TextSize = 14
    radiusInput.PlaceholderText = "–í–≤–µ–¥–∏—Ç–µ —Ä–∞–¥–∏—É—Å..."
    radiusInput.Parent = contentFrame
    
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 6)
    inputCorner.Parent = radiusInput
    
    local inputPadding = Instance.new("UIPadding")
    inputPadding.PaddingLeft = UDim.new(0, 10)
    inputPadding.PaddingRight = UDim.new(0, 10)
    inputPadding.Parent = radiusInput

    -- –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ä–∞–¥–∏—É—Å–∞
    local applyButton = Instance.new("TextButton")
    applyButton.Size = UDim2.new(1, 0, 0, 35)
    applyButton.Position = UDim2.new(0, 0, 0, 65)
    applyButton.BackgroundColor3 = Color3.fromRGB(60, 120, 200)
    applyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    applyButton.Text = "–ü–†–ò–ú–ï–ù–ò–¢–¨ –†–ê–î–ò–£–°"
    applyButton.Font = Enum.Font.GothamBold
    applyButton.TextSize = 14
    applyButton.Parent = contentFrame
    
    local applyCorner = Instance.new("UICorner")
    applyCorner.CornerRadius = UDim.new(0, 6)
    applyCorner.Parent = applyButton

    -- –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫–∞—Å–∞–Ω–∏—è
    local activateButton = Instance.new("TextButton")
    activateButton.Size = UDim2.new(1, 0, 0, 45)
    activateButton.Position = UDim2.new(0, 0, 0, 110)
    activateButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
    activateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    activateButton.Text = "üö´ –í–´–ö–õ - –ö–ê–°–ê–¢–¨–°–Ø –í–°–ï–ì–û (T)"
    activateButton.Font = Enum.Font.GothamBold
    activateButton.TextSize = 14
    activateButton.Parent = contentFrame
    
    local activateCorner = Instance.new("UICorner")
    activateCorner.CornerRadius = UDim.new(0, 6)
    activateCorner.Parent = activateButton

    -- –°—Ç–∞—Ç—É—Å
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1, 0, 0, 20)
    statusLabel.Position = UDim2.new(0, 0, 0, 165)
    statusLabel.BackgroundTransparency = 1
    statusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    statusLabel.Text = "–°—Ç–∞—Ç—É—Å: –ù–µ–∞–∫—Ç–∏–≤–Ω–æ"
    statusLabel.Font = Enum.Font.Gotham
    statusLabel.TextSize = 12
    statusLabel.TextXAlignment = Enum.TextXAlignment.Left
    statusLabel.Parent = contentFrame

    -- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    local infoLabel = Instance.new("TextLabel")
    infoLabel.Size = UDim2.new(1, 0, 0, 40)
    infoLabel.Position = UDim2.new(0, 0, 0, 190)
    infoLabel.BackgroundTransparency = 1
    infoLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
    infoLabel.Text = "üìã –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –¥–ª—è –∫–∞—Å–∞–Ω–∏—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ"
    infoLabel.Font = Enum.Font.Gotham
    infoLabel.TextSize = 11
    infoLabel.TextWrapped = true
    infoLabel.TextXAlignment = Enum.TextXAlignment.Left
    infoLabel.Parent = contentFrame

    -- –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞ GUI (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç–∞)
    local showButton = Instance.new("TextButton")
    showButton.Size = UDim2.new(0, 120, 0, 40)
    showButton.Position = UDim2.new(0.5, -60, 0, 10)
    showButton.BackgroundColor3 = Color3.fromRGB(60, 120, 200)
    showButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    showButton.Text = "üìã –ü–û–ö–ê–ó–ê–¢–¨ GUI"
    showButton.Font = Enum.Font.GothamBold
    showButton.TextSize = 14
    showButton.Visible = false
    showButton.Parent = screenGui
    
    local showCorner = Instance.new("UICorner")
    showCorner.CornerRadius = UDim.new(0, 8)
    showCorner.Parent = showButton

    return {
        ScreenGui = screenGui,
        MainFrame = mainFrame,
        CloseButton = closeButton,
        HideButton = hideButton,
        ShowButton = showButton,
        RadiusInput = radiusInput,
        ApplyButton = applyButton,
        ActivateButton = activateButton,
        StatusLabel = statusLabel,
        InfoLabel = infoLabel
    }
end

-- –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è GUI
function hideGUI()
    if gui then
        gui.MainFrame.Visible = false
        gui.ShowButton.Visible = true
        isGuiVisible = false
    end
end

function showGUI()
    if gui then
        gui.MainFrame.Visible = true
        gui.ShowButton.Visible = false
        isGuiVisible = true
    end
end

function closeGUI()
    if gui then
        stopTouching()
        gui.ScreenGui:Destroy()
        gui = nil
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞
function getPlayerPosition()
    local character = player.Character
    if not character then return nil end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return nil end
    
    return humanoidRootPart.Position
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö —Ö–∏—Ç–±–æ–∫—Å–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ
function findHitboxesInRadius()
    local playerPos = getPlayerPosition()
    if not playerPos then return {} end
    
    local hitboxes = {}
    
    for _, part in ipairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            local partPos = part.Position
            local distance = (partPos - playerPos).Magnitude
            
            if distance <= MAX_DISTANCE then
                table.insert(hitboxes, part)
            end
        end
    end
    
    return hitboxes
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫–∞—Å–∞–Ω–∏—è
function simulateTouch(hitbox)
    local character = player.Character
    if not character then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    
    -- –°–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω–æ–µ –∫–∞—Å–∞–Ω–∏–µ
    local touchData = {
        Instance = hitbox,
        Normal = (humanoidRootPart.Position - hitbox.Position).Unit
    }
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–±—ã—Ç–∏–µ Touched
    hitbox.Touched:Fire(humanoidRootPart)
    
    -- –î–ª—è TouchTransmitter
    local touchTransmitter = hitbox:FindFirstChildOfClass("TouchTransmitter")
    if touchTransmitter then
        touchTransmitter:Fire(humanoidRootPart)
    end
    
    -- –î–ª—è ClickDetector (–µ—Å–ª–∏ –µ—Å—Ç—å)
    local clickDetector = hitbox:FindFirstChildOfClass("ClickDetector")
    if clickDetector then
        fireclickdetector(clickDetector, 0) -- 0 = –ª–µ–≤–∞—è –∫–Ω–æ–ø–∫–∞ –º—ã—à–∏
    end
end

-- –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –∫–∞—Å–∞–Ω–∏—è
function startTouching()
    if isTouchingActive then return end
    
    isTouchingActive = true
    gui.ActivateButton.BackgroundColor3 = Color3.fromRGB(60, 200, 60)
    gui.ActivateButton.Text = "‚úÖ –í–ö–õ - –ö–ê–°–ê–¢–¨–°–Ø –í–°–ï–ì–û (T)"
    gui.StatusLabel.Text = "–°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω–æ - –ö–∞—Å–∞–Ω–∏–µ " .. MAX_DISTANCE .. " studs"
    gui.StatusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    
    -- –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –∫–∞—Å–∞–Ω–∏—è
    touchConnection = RunService.Heartbeat:Connect(function()
        local hitboxes = findHitboxesInRadius()
        
        for _, hitbox in ipairs(hitboxes) do
            simulateTouch(hitbox)
        end
        
        -- –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        if gui and gui.InfoLabel then
            gui.InfoLabel.Text = string.format("üìã –ö–∞—Å–∞–µ—Ç—Å—è %d –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ %d studs", #hitboxes, MAX_DISTANCE)
        end
    end)
end

-- –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–∞—Å–∞–Ω–∏—è
function stopTouching()
    if not isTouchingActive then return end
    
    isTouchingActive = false
    if touchConnection then
        touchConnection:Disconnect()
        touchConnection = nil
    end
    
    if gui then
        gui.ActivateButton.BackgroundColor3 = Color3.fromRGB(200, 60, 60)
        gui.ActivateButton.Text = "üö´ –í–´–ö–õ - –ö–ê–°–ê–¢–¨–°–Ø –í–°–ï–ì–û (T)"
        gui.StatusLabel.Text = "–°—Ç–∞—Ç—É—Å: –ù–µ–∞–∫—Ç–∏–≤–Ω–æ"
        gui.StatusLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
        gui.InfoLabel.Text = "üìã –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –¥–ª—è –∫–∞—Å–∞–Ω–∏—è –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Ä–∞–¥–∏—É—Å–µ"
    end
end

-- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∫–∞—Å–∞–Ω–∏—è
function toggleTouching()
    if isTouchingActive then
        stopTouching()
    else
        startTouching()
    end
end

-- –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
function initializeSystem()
    -- –°–æ–∑–¥–∞–µ–º GUI
    gui = createGUI()
    
    -- –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–¥–∏—É—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    local sphere = Instance.new("Part")
    sphere.Shape = Enum.PartType.Ball
    sphere.Size = Vector3.new(MAX_DISTANCE * 2, MAX_DISTANCE * 2, MAX_DISTANCE * 2)
    sphere.Transparency = 0.9
    sphere.Color = Color3.fromRGB(255, 100, 100)
    sphere.Anchored = true
    sphere.CanCollide = false
    sphere.Material = Enum.Material.Neon
    sphere.Parent = workspace
    sphere.Name = "TouchRadiusVisualization"

    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π GUI
    gui.CloseButton.MouseButton1Click:Connect(function()
        if sphere then sphere:Destroy() end
        stopTouching()
        closeGUI()
    end)

    gui.HideButton.MouseButton1Click:Connect(hideGUI)
    gui.ShowButton.MouseButton1Click:Connect(showGUI)

    gui.ApplyButton.MouseButton1Click:Connect(function()
        local newRadius = tonumber(gui.RadiusInput.Text)
        if newRadius and newRadius > 0 then
            MAX_DISTANCE = math.min(newRadius, 100)
            gui.RadiusInput.Text = tostring(MAX_DISTANCE)
            
            -- –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é
            if sphere then
                sphere.Size = Vector3.new(MAX_DISTANCE * 2, MAX_DISTANCE * 2, MAX_DISTANCE * 2)
            end
            
            if isTouchingActive then
                gui.StatusLabel.Text = "–°—Ç–∞—Ç—É—Å: –ê–∫—Ç–∏–≤–Ω–æ - –ö–∞—Å–∞–Ω–∏–µ " .. MAX_DISTANCE .. " studs"
            end
            
            gui.ApplyButton.BackgroundColor3 = Color3.fromRGB(80, 200, 80)
            task.wait(0.3)
            gui.ApplyButton.BackgroundColor3 = Color3.fromRGB(60, 120, 200)
        else
            gui.StatusLabel.Text = "–û—à–∏–±–∫–∞: –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ!"
            gui.StatusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
            gui.RadiusInput.Text = tostring(MAX_DISTANCE)
        end
    end)

    gui.ActivateButton.MouseButton1Click:Connect(toggleTouching)

    -- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–∞–¥–∏—É—Å–∞
    gui.RadiusInput.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            local newRadius = tonumber(gui.RadiusInput.Text)
            if newRadius and newRadius > 0 then
                MAX_DISTANCE = math.min(newRadius, 100)
                gui.RadiusInput.Text = tostring(MAX_DISTANCE)
                
                if sphere then
                    sphere.Size = Vector3.new(MAX_DISTANCE * 2, MAX_DISTANCE * 2, MAX_DISTANCE * 2)
                end
            else
                gui.RadiusInput.Text = tostring(MAX_DISTANCE)
            end
        end
    end)

    -- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        
        -- –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
        if input.KeyCode == Enum.KeyCode.T then
            toggleTouching()
        end
        
        if input.KeyCode == Enum.KeyCode.F1 then showGUI() end
        if input.KeyCode == Enum.KeyCode.F2 then hideGUI() end
        if input.KeyCode == Enum.KeyCode.R then 
            if gui then
                gui.RadiusInput:CaptureFocus() 
            end
        end
        if input.KeyCode == Enum.KeyCode.F5 then 
            if sphere then sphere:Destroy() end
            stopTouching()
            closeGUI() 
        end
    end)

    -- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ —Å—Ñ–µ—Ä—ã
    RunService.Heartbeat:Connect(function()
        if sphere then
            local playerPos = getPlayerPosition()
            if playerPos then
                sphere.Position = playerPos
            end
        end
    end)

    print("‚úÖ –°–∏–ª–∞ –∫–∞—Å–∞–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
    print("üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:")
    print("T - –í–∫–ª/–í—ã–∫–ª –∫–∞—Å–∞–Ω–∏–µ –≤—Å–µ–≥–æ –≤ —Ä–∞–¥–∏—É—Å–µ")
    print("F1 - –ü–æ–∫–∞–∑–∞—Ç—å GUI")
    print("F2 - –°–∫—Ä—ã—Ç—å GUI") 
    print("F5 - –ó–∞–∫—Ä—ã—Ç—å GUI")
    print("R - –§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Ä–∞–¥–∏—É—Å–∞")
    print("üìè –¢–µ–∫—É—â–∏–π —Ä–∞–¥–∏—É—Å: " .. MAX_DISTANCE .. " studs")
end

-- –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã
task.wait(2)
initializeSystem()

-- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
coroutine.wrap(function()
    while true do
        task.wait(1)
        if sphere and not sphere.Parent then
            -- –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Å—Ñ–µ—Ä—É –µ—Å–ª–∏ –æ–Ω–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞
            sphere = Instance.new("Part")
            sphere.Shape = Enum.PartType.Ball
            sphere.Size = Vector3.new(MAX_DISTANCE * 2, MAX_DISTANCE * 2, MAX_DISTANCE * 2)
            sphere.Transparency = 0.9
            sphere.Color = Color3.fromRGB(255, 100, 100)
            sphere.Anchored = true
            sphere.CanCollide = false
            sphere.Material = Enum.Material.Neon
            sphere.Parent = workspace
            sphere.Name = "TouchRadiusVisualization"
        end
    end
end)()
